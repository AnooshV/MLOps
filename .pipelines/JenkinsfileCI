pipeline {
    agent any
    stages {
        stage('Custom') {
            steps {

                script {
                    print('hello world')
                }
            }
        }
        stage('Build'){
            steps{
                sh '''
                        chmod +x -R .pipelines/stages
                        .pipelines/stages/build.sh
                    '''
            }
        }
        stage('Test'){
            steps{
                sh '''
                        .pipelines/stages/test.sh
                    '''
            }
        }
        stage('Login to Azure'){
            steps{
                sh '''
                az login --service-principal -u ${app_id} -p ${password} --tenant ${tennant_id}
                '''
            }
        }
        stage('Training using development data'){
            steps{
                sh '''
                az ml job create --file src/job.yml --resource-group "adas-datapipeline-poc" --workspace-name "av-mlops-common-workspace " --stream 
                '''
            }
        }
        stage('Training using production data'){
            input{
                message "Do you want to proceed for production training?"
            }

            steps{
                sh '''
                az ml job create --file src/job.yml --resource-group "adas-datapipeline-poc" --workspace-name "av-mlops-common-workspace" --stream
                '''
            }
        }
    
        
     }
     post {
        always {
            cleanWs(cleanWhenNotBuilt: false,
                    deleteDirs: true,
                    disableDeferredWipeout: true,
                    notFailBuild: true,
                    patterns: [[pattern: '.gitignore', type: 'INCLUDE'],
                                [pattern: '.propsfile', type: 'EXCLUDE']])
        }
    }
}